Ch1<<76
16<<UI의 종류로 멀티 터치(Multi-touch), 동작 인식(Gesture Recognition) 등 사용자의 자연스러운 움직임을 인식하여 서로 주고받는 정보를 제공하는 사용자 인터페이스를 의미하는 것은?<<GUI(Graphical User Interface)<<OUI(Organic User Interface)<<NUI(Natural User Interface)<<CLI(Command Line Interface)<<NUI(Natural User Interface)<<
17<<소프트웨어 모델링과 관련한 설명으로 틀린 것은?<<모델링 작업의 결과물은 다른 모델링 작업에 영향을 줄 수 없다.<<구조적 방법론에서는 DFD(Data Flow Diagram), DD(Data Dictionary) 등을 사용하여 요구 사항의 결과를 표현한다.<<객체지향 방법론에서는 UML 표기법을 사용한다.<<소프트웨어 모델을 사용할 경우 개발될 소프트웨어에 대한 이해도 및 이해 당사자 간의 의사소통 향상에 도움이 된다.<<모델링 작업의 결과물은 다른 모델링 작업에 영향을 줄 수 없다.<<
18<<유스케이스 다이어그램(Use Case Diagram)에 관련된 내용으로 틀린 것은?<<시스템과 상호작용하는 외부시스템은 액터로 파악해서는 안된다.<<유스케이스는 사용자 측면에서의 요구사항으로, 사용자가 원하는 목표를 달성하기 위해 수행할 내용을 기술한다.<<시스템 액터는 다른 프로젝트에서 이미 개발되어 사용되고 있으며, 본 시스템과 데이터를 주고받는 등 서로 연동되는 시스템을 말한다.<<액터가 인식할 수 없는 시스템 내부의 기능을 하나의 유스케이스로 파악해서는 안된다.<<시스템과 상호작용하는 외부시스템은 액터로 파악해서는 안된다.<<
19<<소프트웨어 아키텍처 모델 중 MVC(Model-View-Controller)와 관련한 설명으로 틀린 것은?<<MVC 모델은 사용자 인터페이스를 담당하는 계층의 응집도를 높일 수 있고, 여러 개의 다른 UI를 만들어 그 사이에 결합도를 낮출 수 있다.<<모델(Model)은 뷰(View)와 제어(Controller) 사이에서 전달자 역할을 하며, 뷰마다 모델 서브시스템이 각각 하나씩 연결된다.<<뷰(View)는 모델(Model)에 있는 데이터를 사용자 인터페이스에 보이는 역할을 담당한다.<<제어(Controller)는 모델(Model)에 명령을 보냄으로써 모델의 상태를 변경할 수 있다.<<모델(Model)은 뷰(View)와 제어(Controller) 사이에서 전달자 역할을 하며, 뷰마다 모델 서브시스템이 각각 하나씩 연결된다.<<
20<<통합 테스트(Integration Test)와 관련한 설명으로 틀린 것은?<<시스템을 구성하는 모듈의 인터페이스와 결합을 테스트하는 것이다.<<하향식 통합 테스트의 경우 넓이 우선(Breadth First) 방식으로 테스트를 할 모듈을 선택할 수 있다.<<상향식 통합 테스트의 경우 시스템 구조도의 최상위에 있는 모듈을 먼저 구현하고 테스트한다.<<모듈 간의 인터페이스와 시스템의 동작이 정상적으로 잘되고 있는지를 빨리 파악하고자 할 때 상향식 보다는 하향식 통합 테스트를 사용하는 것이 좋다.<<상향식 통합 테스트의 경우 시스템 구조도의 최상위에 있는 모듈을 먼저 구현하고 테스트한다.<<
21<<소프트웨어 공학에서 워크스루(Walkthrough)에 대한 설명으로 틀린 것은?<<사용사례를 확장하여 명세하거나 설계 다이어그램, 원시코드, 테스트 케이스 등에 적용할 수 있다.<<복잡한 알고리즘 또는 반복, 실시간 동작, 병행 처리와 같은 기능이나 동작을 이해하려고 할 때 유용하다.<<인스펙션(Inspection)과 동일한 의미를 가진다.<<단순한 테스트 케이스를 이용하여 프로덕트를 수작업으로 수행해 보는 것이다.<<인스펙션(Inspection)과 동일한 의미를 가진다.<<
22<<소프트웨어의 개발과정에서 소프트웨어의 변경사항을 관리하기 위해 개발된 일련의 활동을 뜻하는 것은?<<복호화<<형상관리<<저작권<<크랙<<형상관리<<
23<<테스트 케이스와 관련한 설명으로 틀린 것은?<<테스트의 목표 및 테스트 방법을 결정하기 전에 테스트 케이스를 작성해야 한다.<<프로그램에 결함이 있더라도 입력에 대해 정상적인 결과를 낼 수 있기 때문에 결함을 검사할 수 있는 테스트 케이스를 찾는 것이 중요하다.<<개발된 서비스가 정의된 요구 사항을 준수하는지 확인하기 위한 입력 값과 실행 조건, 예상 결과의 집합으로 볼 수 있다.<<테스트 케이스 실행이 통과되었는지 실패하였는지 판단하기 위한 기준을 테스트 오라클(Test Oracle)이라고 한다.<<테스트의 목표 및 테스트 방법을 결정하기 전에 테스트 케이스를 작성해야 한다.<<
24<<객체지향 개념을 활용한 소프트웨어 구현과 관련한 설명 중 틀린 것은?<<객체(Object)란 필요한 자료 구조와 수행되는 함수들을 가진 하나의 독립된 존재이다.<<JAVA에서 정보은닉(Information Hiding)을 표기할 때 private의 의미는 '공개'이다.<<상속(Inheritance)은 개별 클래스를 상속 관계로 묶음으로써 클래스 간의 체계화된 전체 구조를 파악하기 쉽다는 장점이 있다.<<같은 클래스에 속하는 개개의 객체이자 하나의 클래스에서 생성된 객체를 인스턴스(Instance)라고 한다.<<JAVA에서 정보은닉(Information Hiding)을 표기할 때 private의 의미는 '공개'이다.<<
25<<DRM(Digital Rights Management)과 관련한 설명으로 틀린 것은?<<디지털 콘텐츠와 디바이스의 사용을 제한하기 위해 하드웨어 제조업자, 저작권자, 출판업자 등이 사용할 수 있는 접근 제어 기술을 의미한다.<<디지털 미디어의 생명 주기 동안 발생하는 사용 권한 관리, 과금, 유통 단계를 관리하는 기술로도 볼 수 있다.<<클리어링 하우스(Clearing House)는 사용자에게 콘텐츠 라이센스를 발급하고 권한을 부여해주는 시스템을 말한다.<<원본을 안전하게 유통하기 위한 전자적 보안은 고려하지 않기 때문에 불법 유통과 복제의 방지는 불가능하다.<<원본을 안전하게 유통하기 위한 전자적 보안은 고려하지 않기 때문에 불법 유통과 복제의 방지는 불가능하다.<<
26<<위험 모니터링의 의미로 옳은 것은?<<위험을 이해하는 것<<첫 번째 조치로 위험을 피할 수 있도록 하는 것<<위험 발생 후 즉시 조치하는 것<<위험 요소 징후들에 대하여 계속적으로 인지하는 것<<위험 요소 징후들에 대하여 계속적으로 인지하는 것<<
27<<동시에 소스를 수정하는 것을 방지하며 다른 방향으로 진행된 개발 결과를 합치거나 변경 내용을 추적할 수 있는 소프트웨어 버전 관리 도구는?<<RCS(Revision Control System)<<RTS(Reliable Transfer Service)<<RPC(Remote Procedure Call)<<RVS(Relative Version System)<<RCS(Revision Control System)<<
28<<화이트박스 테스트와 관련한 설명으로 틀린 것은?<<화이트박스 테스트의 이해를 위해 논리흐름도(Logic-Flow Diagram)를 이용할 수 있다.<<테스트 데이터를 이용해 실제 프로그램을 실행함으로써 오류를 찾는 동적 테스트(Dynamic Test)에 해당한다.<<프로그램의 구조를 고려하지 않기 때문에 테스트 케이스는 프로그램 또는 모듈의 요구나 명세를 기초로 결정한다.<<테스트 데이터를 선택하기 위하여 검증기준(Test Coverage)을 정한다.<<프로그램의 구조를 고려하지 않기 때문에 테스트 케이스는 프로그램 또는 모듈의 요구나 명세를 기초로 결정한다.<<
29<<알고리즘과 관련한 설명으로 틀린 것은?<<주어진 작업을 수행하는 컴퓨터 명령어를 순서대로 나열한 것으로 볼 수 있다.<<검색(Searching)은 정렬이 되지 않은 데이터 혹은 정렬이 된 데이터 중에서 키값에 해당되는 데이터를 찾는 알고리즘이다.<<정렬(Sorting)은 흩어져있는 데이터를 키값을 이용하여 순서대로 열거하는 알고리즘이다.<<선형 검색은 검색을 수행하기 전에 반드시 데이터의 집합이 정렬되어 있어야 한다.<<선형 검색은 검색을 수행하기 전에 반드시 데이터의 집합이 정렬되어 있어야 한다.<<
30<<소프트웨어를 보다 쉽게 이해할 수 있고 적은 비용으로 수정할 수 있도록 겉으로 보이는 동작의 변화 없이 내부구조를 변경하는 것은?<<Refactoring<<Architecting<<Specification<<Renewal<<Refactoring<<